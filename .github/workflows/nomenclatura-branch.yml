name: CHECK - Nomenclatura de Branch

# O workflow ser√° acionado sempre que um Pull Request for criado ou atualizado com destino √† branch 'main'.
on: 
  pull_request:
    branches:
      - main   # Especifica que o workflow ser√° acionado apenas para Pull Requests na branch 'main'.
    types:
      - opened                         # Quando um novo PR √© aberto
      - synchronize                    # Quando novos commits s√£o enviados para um PR existente
      - reopened                       # Quando um PR fechado √© reaberto
      - unlocked                       # Quando um PR bloqueado √© desbloqueado
      - edited                         # Quando a descri√ß√£o ou t√≠tulo de um PR √© editado

jobs:
  # Job respons√°vel por verificar se o nome da branch do PR segue os padr√µes estabelecidos no guia de contribui√ß√£o.
  check-nomenclatura-branch:
    runs-on: ubuntu-latest             # O job ser√° executado em uma VM com o sistema Ubuntu mais recente.
    timeout-minutes: 10                # Tempo m√°ximo de execu√ß√£o do job √© de 10 minutos.

    steps:
      - name: Verificar nome e branch de destino no PR  # Valida o nome e a branch de destino do PR.
        run: |
          # Captura o nome da branch do PR e a branch de destino
          branch_name=${GITHUB_HEAD_REF}
          target_branch=${GITHUB_BASE_REF}
          
          # Express√£o regular que define o padr√£o de nomenclatura esperado: 'fix/' ou 'feature/', seguido por letras min√∫sculas e h√≠fens.
          dev_regex="^(fix|feature)\/[a-z]+(-[a-z]+)*$"  
          
          echo "=============================="
          echo "**Iniciando verifica√ß√£o da nomenclatura...**"
          echo ""
          echo "O nome da branch deve come√ßar com o prefixo feature/ ou fix/, dependendo se o objetivo √© adicionar uma nova funcionalidade ou corrigir um bug. Al√©m disso, √© obrigat√≥rio que o restante do nome seja composto apenas por letras min√∫sculas, utilizando h√≠fens (-) para separar palavras, evitando espa√ßos ou caracteres especiais."
          echo ""
          echo "üí° Dica:"
          echo "Aqui est√£o alguns exemplos de nomes de branch v√°lidos:"
          echo " - 'feature/adicionar-perfil-usuario'"
          echo " - 'fix/corrigir-erro-login'"
          echo ""
          echo "Para mais informa√ß√µes, acesse o guia de contribui√ß√£o na sess√£o de clonagem: ../CONTRIBUTING.md#-clonagem."
          echo ""

          # Verifica se o nome da branch est√° em conformidade com a express√£o regular
          if [[ "$branch_name" =~ $dev_regex ]]; then
            echo "‚úÖ O nome da branch '$branch_name' est√° correto."

            # Verifica se a branch de destino √© 'main'
            if [[ "$target_branch" != "main" ]]; then
              echo "‚ùå A branch de destino '$target_branch' est√° incorreta."
              echo ""
              echo "‚ö†Ô∏è Aten√ß√£o:"
              echo "Ajuste a branch de destino para 'main' antes de continuar"
              echo ""
              exit 1  # Finaliza com erro, bloqueando a mesclagem
            else
              echo "‚úÖ A branch de destino '$target_branch' est√° correta."
            fi
          else
            echo "‚ùå O nome da branch '$branch_name' est√° incorreto."
            echo ""
            echo "‚ö†Ô∏è Aten√ß√£o:"
            echo "Renomeie a branch para seguir o formato esperado."
            echo ""
            exit 1  # Finaliza com erro, bloqueando a mesclagem
          fi
          
          echo "----------------------------------------------"
          echo "**Verifica√ß√£o conclu√≠da com sucesso.**"
        shell: bash  # Define o shell bash para execu√ß√£o dos comandos.
